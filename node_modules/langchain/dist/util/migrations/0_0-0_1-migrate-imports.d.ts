declare const enum UpgradingModule {
    COHERE = "cohere",
    PINECONE = "pinecone"
}
/**
 * Find imports from deprecated pre 0.1 LangChain modules and update them to import
 * from the new LangChain packages.
 */
export declare function updateEntrypointsFrom0_0_xTo0_1_x({ localLangChainPath, codePath, customGlobPattern, customIgnorePattern, skipCheck, }: {
    /**
     * The absolute path to the locally cloned LangChain repo root.
     * @example "/Users/username/code/langchainjs"
     */
    localLangChainPath: string;
    /**
     * The absolute path to the source directory of the codebase to update.
     * @example "/Users/username/code/my-project/src"
     */
    codePath: string;
    /**
     * Optionally, pass in a custom glob pattern to match files.
     * The backslash included in the example and default is only for
     * JSDoc to escape the asterisk. Do not include unless intentionally.
     * @example "/*.d.ts"
     * @default "**\/*.ts"
     */
    customGlobPattern?: string;
    /**
     * A custom ignore pattern for ignoring files.
     * The backslash included in the example and default is only for
     * JSDoc to escape the asterisk. Do not include unless intentionally.
     * @example ["**\/node_modules/**", "**\/dist/**", "**\/*.d.ts"]
     * @default node_modules/**
     */
    customIgnorePattern?: string[] | string;
    /**
     * Optionally skip checking the passed modules for imports to
     * update.
     * @example [UpgradingModule.COHERE]
     * @default undefined
     */
    skipCheck?: Array<UpgradingModule>;
}): Promise<void>;
export {};
